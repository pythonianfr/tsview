<script>
    class PlotFigure extends HTMLElement {
        static get observedAttributes() {
            return ['args', 'history-args', 'hover-args'];
        }
            attributeChangedCallback(name, old_value, new_value) {
                if ( name == 'args' ) {
                    function doit() {
                        let args = JSON.parse(new_value);
                        Plotly.newPlot(
                            args.div,
                            args.data,
                            {% if function_type == 'info' or function_type == 'editor' %}
                                args.layout,
                                {
                                    displaylogo: false,
                                    displayModeBar: true,
                                    displaylogo: false,
                                    responsive: true,
                                    modeBarButtonsToRemove: ['sendDataToCloud']
                                }
                            {% elif function_type == 'groupinfo' or function_type == 'formula' %}
                                {showlegend: false},
                                {displaylogo: false, displayModeBar: false}
                            {% elif function_type == 'view' %}
                                {showlegend: true, height: 700},
                                {displaylogo: false, modeBarButtonsToRemove: ["sendDataToCloud"]}
                            {% endif %}
                        );
                        {% if function_type == 'info' %}
                            document.getElementById(args.div).on(
                                'plotly_relayout', function(eventData) {
                                    var range;
                                    if (eventData['xaxis.range[0]'] !== undefined
                                        && eventData['xaxis.range[1]'] !== undefined) {
                                        range = [
                                            eventData['xaxis.range[0]'],
                                            eventData['xaxis.range[1]']
                                        ];
                                    } else {
                                        range = ["", ""];
                                    }
                                    app.ports.dateInInterval.send(range);
                                }
                            );
                        {% elif function_type == 'editor' %}
                            document.getElementById(args.div).on(
                                'plotly_relayout', function(eventData) {
                                    var idates = args.data[0].x.filter(
                                        function(strdate) {
                                            let date = new Date(strdate)
                                            let mindate = new Date(eventData['xaxis.range[0]'])
                                            let maxdate = new Date(eventData['xaxis.range[1]'])
                                            return date >= mindate && date <= maxdate;
                                        }
                                    );
                                    app.ports.dateInInterval.send(idates);
                                }
                            );
                        {% endif %}
                    }
                    setTimeout(doit, 10)
                }
                if ( name == 'history-args' ) {
                    function doit () {
                        let history_args = JSON.parse(new_value);
                        Plotly.newPlot(
                            history_args.div,
                            history_args.data,
                            history_args.layout,
                            {
                                displaylogo: false,
                                displayModeBar: true,
                                displaylogo: false,
                                responsive: true,
                                modeBarButtonsToRemove: ['sendDataToCloud']
                            }
                        );
                        document.getElementById(history_args.div).on('plotly_hover', function(data){
                            var points = data.points;
                            var list_data = [];
                            points.forEach(function(point){
                                list_data.push(
                                    {"date": point.data.name,
                                    "value": point.y});
                            });
                            var data = {
                                    "name" : new Date(points[0].x),
                                    "data" : list_data
                                };

                            app.ports.dataFromHover.send(JSON.stringify(data));
                        });
                    }
                    setTimeout(doit, 10)
                }
                if ( name == 'hover-args' ) {
                    function doit () {
                        let hover_args = JSON.parse(new_value);
                        Plotly.newPlot(
                            hover_args.div,
                            hover_args.data,
                            hover_args.layout,
                            {
                                displaylogo: false,
                                displayModeBar: true,
                                displaylogo: false,
                                responsive: true,
                                modeBarButtonsToRemove: ['sendDataToCloud']
                            }
                        );
                    }
                    setTimeout(doit, 10)
                }
            }
    }
    window.customElements.define("plot-figure", PlotFigure);
</script>